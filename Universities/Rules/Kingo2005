[Encoding]
gb2312

[LoginUrl]
{BaseUrl}_data/index_login.aspx

[LoginVerifierUrl]

[LoginMethod]
POST

[LoginParams][]
UserID={Username}
PassWord={Password}
Sel_Type=STU

[LoginErrorKeys][]
该账号尚未分配角色,UsernamePasswordMismatch
账号或密码不正确,UsernamePasswordMismatch

[LoginSuccessKey]
正在加载权限数据

[PreFetchUrl]
{BaseUrl}znpk/Pri_StuSel.aspx

[PreFetchMethod]
GET

[PreFetchParams][]

[PreFetchRegexes][]
<select name='Sel_XNXQ'.+?<option value='(.+?)'[1]

[FetchUrl]
{BaseUrl}znpk/Pri_StuSel_rpt.aspx

[FetchMethod]
POST

[FetchParams][]
Sel_XNXQ={PreFetchValues[0]}
rad=on
px=0

[RowsRegex]
<TABLE [\s\S]+?<tbody>([\s\S]+?)</tbody>[1]

[CellsRegex]
<tr\s*>([\s\S]+?)</tr>[1]

[CellValueRegex]
(?:<td(?:\s[^>]*)?\shidevalue='([\s\S]*?)'(?:\s[^>]*)?>|<td(?:\s[^>]*)?>([\s\S]*?))<br></td>[1,2]

[GetClassesScript]{"
var weekTable = {
	"日": 0,
	"一": 1,
	"二": 2,
	"三": 3,
	"四": 4,
	"五": 5,
	"六": 6
};

function getClasses(rows) {
	var classesMap = {};
	for (var i = 0; i < rows.length; i++) {
		var cells = rows[i];
		var name = cells[1].match(/\[\d+\](.+)/)[1];

		var list = classesMap.hasOwnProperty(name) ? classesMap[name] : classesMap[name] = [];
		var item = {
			teacher: cells[9],
			location: cells[12]
		};

		//days and sessions
		var dsGroups = cells[11].match(/([日一二三四五六])\[(.+)节\]([单双])?/);
		var s = 0;
		if (dsGroups[3] == "单")
			s = 1;
		else if (dsGroups[3] == "双")
			s = 2;

		item.weeks = getNumbers(cells[10], s);
		item.dayOfWeek = weekTable[dsGroups[1]];
		item.sessions = getNumbers(dsGroups[2]);

		list.push(item);
	}

	var classes = [];
	for (var name in classesMap)
		if (classesMap.hasOwnProperty(name))
			classes.push({
				name: name,
				classes: classesMap[name]
			});
	
	return classes;
}

function getNumbers(str, s) {
	var d, mod;
	if (s) {
		d = 2;
		mod = s == 1 ? 1 : 0;
	}
	else {
		d = 1;
		mod = 0;
	}

    var nums = [];
    var periods = str.split(",");
    for (var i = 0, period; period = periods[i]; i++) {
        var ns = period.split("-");
        var start = Number(ns[0]);
        var end = (ns.length > 1 ? Number(ns[1]) : start) + 1;
        for (var j = start; j < end; j++)
			if (j % d == mod)
				nums.push(j);
    }
    return nums;
}
"}

